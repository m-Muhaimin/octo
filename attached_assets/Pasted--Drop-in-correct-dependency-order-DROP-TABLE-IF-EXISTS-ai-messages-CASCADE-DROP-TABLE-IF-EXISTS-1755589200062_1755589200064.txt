-- Drop in correct dependency order
DROP TABLE IF EXISTS ai_messages CASCADE;
DROP TABLE IF EXISTS ai_sessions CASCADE;
DROP TABLE IF EXISTS communications CASCADE;
DROP TABLE IF EXISTS referrals CASCADE;
DROP TABLE IF EXISTS appointment_slots CASCADE;
DROP TABLE IF EXISTS appointments CASCADE;
DROP TABLE IF EXISTS transactions CASCADE;
DROP TABLE IF EXISTS coverage CASCADE;
DROP TABLE IF EXISTS metrics CASCADE;
DROP TABLE IF EXISTS chart_data CASCADE;
DROP TABLE IF EXISTS social_history CASCADE;
DROP TABLE IF EXISTS encounters CASCADE;
DROP TABLE IF EXISTS labs CASCADE;
DROP TABLE IF EXISTS vitals CASCADE;
DROP TABLE IF EXISTS allergies CASCADE;
DROP TABLE IF EXISTS medications CASCADE;
DROP TABLE IF EXISTS medical_history CASCADE;
DROP TABLE IF EXISTS patients CASCADE;
DROP TABLE IF EXISTS users CASCADE;

-- Patients master table
CREATE TABLE patients (
    patient_id BIGSERIAL PRIMARY KEY,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    gender CHAR(1) CHECK (gender IN ('M','F')),
    date_of_birth DATE NOT NULL,
    race TEXT,
    ethnicity TEXT,
    address TEXT,
    city TEXT,
    state CHAR(2),
    zip_code CHAR(5),
    phone TEXT,
    email TEXT,
    primary_language TEXT,
    marital_status TEXT,
    insurance_type TEXT,
    last_visit_date DATE
);

-- Clinical tables
CREATE TABLE medical_history (
    history_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    condition_name TEXT NOT NULL,
    diagnosis_date DATE,
    condition_status TEXT CHECK (condition_status IN ('Active','Resolved')),
    severity TEXT CHECK (severity IN ('Mild','Moderate','Severe')),
    notes TEXT
);

CREATE TABLE medications (
    medication_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    medication_name TEXT NOT NULL,
    dosage TEXT,
    frequency TEXT,
    prescribed_date DATE,
    prescriber TEXT,
    medication_status TEXT CHECK (medication_status IN ('Active','Discontinued')),
    reason TEXT
);

CREATE TABLE allergies (
    allergy_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    allergen TEXT NOT NULL,
    reaction TEXT,
    severity TEXT CHECK (severity IN ('Mild','Moderate','Severe')),
    onset_date DATE,
    allergy_status TEXT DEFAULT 'Active',
    notes TEXT
);

CREATE TABLE vitals (
    vital_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    visit_date DATE NOT NULL,
    height_cm NUMERIC(5,2),
    weight_kg NUMERIC(5,2),
    temperature_c NUMERIC(4,1),
    pulse INTEGER,
    bp_systolic INTEGER,
    bp_diastolic INTEGER,
    o2_saturation NUMERIC(4,1),
    respiratory_rate INTEGER,
    notes TEXT
);

CREATE TABLE labs (
    lab_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    test_date DATE NOT NULL,
    test_type TEXT,
    result NUMERIC(10,2),
    units TEXT,
    reference_range TEXT,
    ordering_provider TEXT,
    notes TEXT
);

CREATE TABLE encounters (
    encounter_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    visit_date DATE NOT NULL,
    provider TEXT,
    visit_type TEXT CHECK (visit_type IN ('Routine','Follow-up','Urgent','Emergency')),
    chief_complaint TEXT,
    diagnosis TEXT,
    treatment TEXT,
    follow_up_date DATE,
    notes TEXT
);

CREATE TABLE social_history (
    social_history_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    tobacco_use TEXT CHECK (tobacco_use IN ('Current Smoker','Former Smoker','Never Smoked')),
    alcohol_use TEXT CHECK (alcohol_use IN ('Heavy Drinker','Moderate Drinker','Social Drinker','Non-Drinker')),
    drug_use TEXT CHECK (drug_use IN ('Current','Former','Never')),
    exercise_frequency TEXT CHECK (exercise_frequency IN ('Sedentary','Minimal','Moderate','Active','Very Active')),
    diet TEXT CHECK (diet IN ('Standard','Mediterranean','Vegetarian','Low-carb','Unrestricted')),
    occupation TEXT,
    living_situation TEXT,
    notes TEXT
);

-- Administrative/Financial Tables
CREATE TABLE appointments (
    appointment_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    appointment_type TEXT NOT NULL,
    appointment_date DATE NOT NULL,
    appointment_time TEXT NOT NULL,
    status TEXT DEFAULT 'scheduled',
    encounter_id BIGINT REFERENCES encounters(encounter_id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE transactions (
    transaction_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    amount DECIMAL(10,2) NOT NULL,
    type TEXT NOT NULL,
    status TEXT NOT NULL DEFAULT 'pending',
    description TEXT,
    payment_method TEXT NOT NULL,
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    encounter_id BIGINT REFERENCES encounters(encounter_id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE coverage (
    coverage_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    status TEXT NOT NULL DEFAULT 'active',
    type TEXT NOT NULL,
    subscriber_id TEXT NOT NULL,
    beneficiary_id TEXT,
    relationship TEXT DEFAULT 'self',
    period TEXT,
    payor TEXT NOT NULL,
    class TEXT,
    network TEXT,
    cost_to_beneficiary TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE communications (
    communication_id BIGSERIAL PRIMARY KEY,
    status TEXT NOT NULL DEFAULT 'completed',
    category TEXT NOT NULL,
    priority TEXT DEFAULT 'routine',
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    about TEXT,
    encounter_id BIGINT REFERENCES encounters(encounter_id),
    sent TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    received TIMESTAMP,
    recipient TEXT NOT NULL,
    sender TEXT NOT NULL,
    reason_code TEXT,
    reason_reference TEXT,
    payload TEXT NOT NULL,
    note TEXT,
    medium TEXT NOT NULL DEFAULT 'sms',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- AI/Automation tables
CREATE TABLE ai_sessions (
    session_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE SET NULL,
    session_type TEXT NOT NULL,
    status TEXT NOT NULL DEFAULT 'active',
    channel TEXT NOT NULL,
    phone_number TEXT,
    email TEXT,
    started_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    completed_at TIMESTAMP,
    context TEXT,
    audit TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ai_messages (
    message_id BIGSERIAL PRIMARY KEY,
    session_id BIGINT REFERENCES ai_sessions(session_id) ON DELETE CASCADE,
    role TEXT NOT NULL,
    content TEXT NOT NULL,
    metadata TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    processed BOOLEAN DEFAULT FALSE,
    tools TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Scheduling helpers
CREATE TABLE appointment_slots (
    slot_id BIGSERIAL PRIMARY KEY,
    provider_id TEXT NOT NULL,
    location_id TEXT NOT NULL,
    service_type TEXT NOT NULL,
    date DATE NOT NULL,
    start_time TEXT NOT NULL,
    end_time TEXT NOT NULL,
    status TEXT DEFAULT 'available',
    duration INTEGER NOT NULL,
    specialty_required TEXT,
    location_name TEXT NOT NULL,
    provider_name TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE referrals (
    referral_id BIGSERIAL PRIMARY KEY,
    patient_id BIGINT REFERENCES patients(patient_id) ON DELETE CASCADE,
    from_provider TEXT NOT NULL,
    to_provider TEXT,
    specialty TEXT NOT NULL,
    reason TEXT NOT NULL,
    icd_codes TEXT NOT NULL,
    status TEXT DEFAULT 'requested',
    valid_from DATE NOT NULL,
    valid_to DATE NOT NULL,
    auth_number TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- System/User & Analytics
CREATE TABLE users (
    user_id BIGSERIAL PRIMARY KEY,
    username TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE metrics (
    metric_id BIGSERIAL PRIMARY KEY,
    total_patients INTEGER NOT NULL,
    total_appointments INTEGER NOT NULL,
    total_income DECIMAL(10,2) NOT NULL,
    total_treatments INTEGER NOT NULL,
    patient_growth TEXT NOT NULL,
    appointment_growth TEXT NOT NULL,
    income_growth TEXT NOT NULL,
    treatment_growth TEXT NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE chart_data (
    chart_id BIGSERIAL PRIMARY KEY,
    month TEXT NOT NULL,
    hospitalized_patients INTEGER NOT NULL,
    outpatients INTEGER NOT NULL,
    chronic_patients INTEGER,
    preventive_visits INTEGER,
    emergency_visits INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
